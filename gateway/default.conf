server {
    listen 80;
    server_name localhost;

    set $user_id $http_x_user_id;
    set $signature $http_x_signature;

    if ($user_id = "") {
        return 400 "Missing X-User-ID";
    }

    if ($signature = "") {
        return 400 "Missing X-Signature";
    }

    access_by_lua_block {
        local ffi = require "ffi"
        local C = ffi.C

        ffi.cdef[[
        typedef unsigned int uint;
        typedef unsigned char uchar;
        uchar *HMAC(const void *evp_md, const void *key, int key_len,
                    const uchar *d, int n, uchar *md, uint *md_len);
        void *EVP_sha256(void);
        char *ngx_encode_base64(const unsigned char *s, int len);  // 추가된 부분 아님
        ]]

        local base64 = require("ngx.base64")  -- OpenResty에 기본 포함됨

        local secret_key = os.getenv("SECRET_KEY")
        local user_id = ngx.var.user_id
        local signature = ngx.var.signature

        if not secret_key then
            ngx.log(ngx.ERR, "SECRET_KEY not set")
            return ngx.exit(ngx.HTTP_INTERNAL_SERVER_ERROR)
        end

        local md = ffi.new("unsigned char[32]")
        local md_len = ffi.new("unsigned int[1]")

        local result_ptr = C.HMAC(C.EVP_sha256(),
                                secret_key, #secret_key,
                                user_id, #user_id,
                                md, md_len)

        if result_ptr == nil then
            ngx.log(ngx.ERR, "HMAC computation failed")
            return ngx.exit(ngx.HTTP_INTERNAL_SERVER_ERROR)
        end

        local signature_bin = ffi.string(md, md_len[0])
        local expected_signature = base64.encode_base64url(signature_bin)

        if expected_signature ~= signature then
            ngx.status = ngx.HTTP_UNAUTHORIZED
            ngx.say("Invalid Signature")
            return ngx.exit(ngx.HTTP_UNAUTHORIZED)
        end
    }

    location / {
        proxy_pass http://backend:8011;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-User-ID $user_id;
    }
}
